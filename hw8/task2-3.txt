2. Определить сложность следующих алгоритмов: поиск элемента массива с известным индексом, дублирование массива через foreach, рекурсивная функция нахождения факториала числа.

Поиск элемента массива с известным индексом - сложность O(1)
Дублирование массива через foreach - сложность O(N) - где N - количество элементов массива
Рекурсивная функция нахождения факториала числа - сложность O(N-2), можно привести к O(N), где N - само число.

3. Определить сложность следующих алгоритмов. Сколько произойдет итераций?

$n = 100;
$array[]= [];

for ($i = 0; $i < $n; $i++) {
  for ($j = 1; $j < $n; $j *= 2) {
     $array[$i][$j]= true;
} }
Вложенный цикл - 7 итераций, верхний - 100, то есть итого 700 итераций.
Сложность будет O(X*N), где N = значение переменной $, а Х - степень числа 2. Можно привести к O(N), При увеличении N до 1000 или даже 1000000 лавинообразного увеличения числа итераций не происходит.

$n = 100;
$array[] = [];

for ($i = 0; $i < $n; $i += 2) {
  for ($j = $i; $j < $n; $j++) {
     $array[$i][$j]= true;
} }
Вложенный цикл 100 итераций, верхний - 50, итого 5000.
Сложность будет O((N^2)/2), можно привести к O(N^2), зависимость квадратическая.